{"version":3,"sources":["Game.js","controls.svg","Settings.js","App.js","reportWebVitals.js","index.js"],"names":["width","window","innerWidth","height","innerHeight","dirs","THREE","Game","props","initiate","bind","reset","turn","hashPosition","getRandomBetween","moveFoodRandom","createFood","createSnakeBody","moveSnakeBody","createBounds","changeBounds","gameOver","startAnimation","stopAnimation","handleKeyDown","this","mount","appendChild","renderer","domElement","render","scene","camera","document","addEventListener","change","boundsSize","console","log","snake","lost","removeEventListener","animation","undefined","grid","antialias","setSize","boundsMaterial","color","transparent","opacity","bounds","add","snakeGeometry","snakeMaterial","foodGeometry","foodMaterial","light","position","set","lookAt","current","dir","food","remove","length","pop","tmpFood","x","y","z","foodBox","foodEdges","geometry","foodLines","material","depthTest","getComponent","cantorPair","a","b","min","max","Math","floor","random","minBound","ceil","maxBound","empties","Vector3","push","snakeBody","snakeBox","snakeEdges","snakeLines","previousPosition","splice","indexOf","boundsGeometry","boundsFaces","boundsEdges","boundsLines","newSize","abs","onGameOver","requestAnimationFrame","animate","setTimeout","gameState","e","preventDefault","keyCode","className","ref","onKeyDown","React","Component","BoundsSizeInput","handleChange","onBoundsSizeChange","target","value","onChange","StartButton","handleClick","onStartClick","onClick","StopButton","onStopClick","ResetButton","onResetClick","Controls","src","ControlsImage","alt","Settings","App","state","handleBoundsSizeChange","handleStartClick","handleStopClick","handleResetClick","handleGameOver","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.397d6777.chunk.js","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { Vector3 } from \"three\";\nimport \"./Game.css\";\n\nconst width = window.innerWidth * 2 / 3, height = window.innerHeight;\nconst dirs = {\"+x\": new THREE.Vector3(1, 0, 0),\n\t\t\t  \"-x\": new THREE.Vector3(-1, 0, 0),\n\t\t  \t  \"+y\": new THREE.Vector3(0, 1, 0),\n\t\t\t  \"-y\": new THREE.Vector3(0, -1, 0),\n\t\t\t  \"+z\": new THREE.Vector3(0, 0, 1),\n\t\t\t  \"-z\": new THREE.Vector3(0, 0, -1)};\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.initiate.bind(this);\n\t\tthis.reset.bind(this);\n\t\tthis.turn.bind(this);\n\t\tthis.hashPosition.bind(this);\n\t\tthis.getRandomBetween.bind(this);\n\t\tthis.moveFoodRandom.bind(this);\n\t\tthis.createFood.bind(this);\n\t\tthis.createSnakeBody.bind(this);\n\t\tthis.moveSnakeBody.bind(this);\n\t\tthis.createBounds.bind(this);\n\t\tthis.changeBounds.bind(this);\n\t\tthis.gameOver.bind(this);\n\t\tthis.startAnimation.bind(this);\n\t\tthis.stopAnimation.bind(this);\n\t\tthis.handleKeyDown.bind(this);\n\n\t\tthis.initiate();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mount.appendChild(this.renderer.domElement);\n\t\tthis.renderer.render(this.scene, this.camera);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\t}\n\t\n\tcomponentDidUpdate() {\n\t\tif (this.props.change === \"bounds\") {\n\t\t\tthis.changeBounds(this.props.boundsSize);\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse if (this.props.change === \"start\") {\n\t\t\tconsole.log(this.snake);\n\t\t\tthis.startAnimation();\n\t\t}\n\t\telse if (this.props.change === \"stop\") {\n\t\t\tthis.stopAnimation();\n\t\t}\n\t\telse if (this.props.change === \"reset\") {\n\t\t\tthis.reset();\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse if (this.props.change === \"gameover\") {\n\t\t\tthis.stopAnimation();\n\t\t\tthis.lost = true;\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\t}\n\n\tinitiate() {\n\t\tthis.animation = undefined;\n\t\tconsole.log(this.grid);\n\t\tthis.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.renderer = new THREE.WebGLRenderer({antialias: true});\n\t\tthis.renderer.setSize(width, height);\n\t\t\n\t\tthis.boundsMaterial = new THREE.MeshLambertMaterial({ color: 0xff0000, transparent: true, opacity: 0.15});\n\t\tthis.bounds = this.createBounds();\n\t\tthis.scene.add(this.bounds);\n\n\t\tthis.snake = [];\n\t\tthis.snakeGeometry = new THREE.BoxGeometry(1, 1, 1);\n\t\tthis.snakeMaterial = new THREE.MeshLambertMaterial({ color: 0x00ff00 });\n\n\t\tthis.foodGeometry = new THREE.BoxGeometry(1, 1, 1);\n\t\tthis.foodMaterial = new THREE.MeshLambertMaterial({ color: 0xff0000 });\n\n\t\tthis.light = new THREE.PointLight(0xFFFFFF, 1, 0);\n\t\tthis.light.position.set(30, 30, 30);\n\t\tthis.scene.add(this.light);\n\n\t\tthis.camera.position.set(this.props.boundsSize, this.props.boundsSize, this.props.boundsSize * 1.25);\n\t\tthis.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\t\tthis.reset();\n\t}\n\n\treset() {\n\t\tthis.grid = {};\n\t\tthis.current = new THREE.Vector3(0, 0, 0);\n\t\tthis.dir = \"+z\";\n\n\t\tif (this.food) {\n\t\t\tthis.scene.remove(this.food);\n\t\t}\n\t\twhile (this.snake.length > 0) {\n\t\t\tthis.scene.remove(this.snake.pop());\n\t\t}\n\n\t\tthis.createSnakeBody(0, 0, 0);\n\n\t\tvar tmpFood = this.createFood(0, 0, 0);\n\t\tthis.scene.add(tmpFood);\n\t\tthis.food = this.moveFoodRandom(tmpFood);\n\t}\n\n\tcreateFood(x, y, z) {\n\t\tvar food = new THREE.Group();\n\t\tconst foodBox = new THREE.Mesh(this.foodGeometry, this.foodMaterial);\n\t\tconst foodEdges = new THREE.EdgesGeometry(foodBox.geometry);\n\t\tconst foodLines = new THREE.LineSegments(foodEdges);\n\t\tfoodLines.material.depthTest = false;\n\t\tfoodLines.material.opacity = 0.25;\n\t\tfoodLines.material.transparent = true;\n\t\tfood.add(foodBox);\n\t\tfood.add(foodLines);\n\t\tfood.position.set(x, y, z);\n\t\treturn food;\n\t}\n\n\thashPosition(position) {\n\t\tvar x = position.getComponent(0), y = position.getComponent(1), z = position.getComponent(2);\n\t\tx = x >= 0 ? x * 2 : -x * 2 - 1;\n\t\ty = y >= 0 ? y * 2 : -y * 2 - 1;\n\t\tz = z >= 0 ? z * 2 : -z * 2 - 1;\n\t\tfunction cantorPair(a, b) {\n\t\t\treturn (a + b) * (a + b + 1) / 2 + b;\n\t\t}\n\t\treturn cantorPair(cantorPair(x, y), z);\n\t}\n\n\tgetRandomBetween(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min) + min);\n\t}\n\n\tmoveFoodRandom(food) {\n\t\tthis.grid[this.hashPosition(food.position)] = 'empty';\n\n\t\tconst minBound = Math.ceil(-this.props.boundsSize / 2), maxBound = Math.floor(this.props.boundsSize / 2);\n\t\tvar empties = [];\n\t\tfor (let x = minBound; x <= maxBound; x++) {\n\t\t\tfor (let y = minBound; y <= maxBound; y++) {\n\t\t\t\tfor (let z = minBound; z <= maxBound; z++) {\n\t\t\t\t\tconst position = new Vector3(x, y, z);\n\t\t\t\t\tif (this.grid[this.hashPosition(position)] !== 'snake' && this.grid[this.hashPosition(position)] !== 'food') {\n\t\t\t\t\t\tempties.push(position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst idx = this.getRandomBetween(0, empties.length);\n\t\tconst position = empties[idx];\n\t\tfood.position.set(position.getComponent(0), position.getComponent(1), position.getComponent(2));\n\t\tthis.grid[this.hashPosition(position)] = 'food';\n\t\treturn food;\n\t}\n\n\tcreateSnakeBody(x, y, z) {\n\t\tvar snakeBody = new THREE.Group();\n\t\tconst snakeBox = new THREE.Mesh(this.snakeGeometry, this.snakeMaterial);\n\t\tconst snakeEdges = new THREE.EdgesGeometry(snakeBox.geometry);\n\t\tconst snakeLines = new THREE.LineSegments(snakeEdges);\n\t\tsnakeLines.material.depthTest = false;\n\t\tsnakeLines.material.opacity = 0.25;\n\t\tsnakeLines.material.transparent = true;\n\t\tsnakeBody.add(snakeBox);\n\t\tsnakeBody.add(snakeLines);\n\t\tsnakeBody.position.set(x, y, z);\n\t\t\n\t\tthis.snake.push(snakeBody);\n\t\tthis.grid[this.hashPosition(snakeBody.position)] = 'snake';\n\t\tthis.scene.add(snakeBody);\n\t\treturn snakeBody;\n\t}\n\n\tmoveSnakeBody(snakeBody, x, y, z) {\n\t\tconst previousPosition = snakeBody.position;\n\t\tthis.grid[this.hashPosition(previousPosition)] = 'empty';\n\t\tif (this.grid[this.hashPosition(new Vector3(x, y, z))] === 'snake') {\n\t\t\tconsole.log(\"Hit itself\");\n\t\t\tthis.gameOver();\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tthis.snake.splice(this.snake.indexOf(snakeBody), 1);\n\t\t\tsnakeBody.position.set(x, y, z);\n\t\t\tthis.grid[this.hashPosition(snakeBody.position)] = 'snake';\n\t\t\tthis.snake.push(snakeBody);\n\t\t\treturn snakeBody;\n\t\t}\n\t}\n\n\tcreateBounds() {\n\t\tvar bounds = new THREE.Group();\n\t\tconst boundsGeometry = new THREE.BoxGeometry(this.props.boundsSize, this.props.boundsSize, this.props.boundsSize, this.props.boundsSize / 5, this.props.boundsSize / 5, this.props.boundsSize / 5);\n\t\tconst boundsFaces = new THREE.Mesh(boundsGeometry, this.boundsMaterial);\n\t\tconst boundsEdges = new THREE.EdgesGeometry(boundsFaces.geometry);\n\t\tconst boundsLines = new THREE.LineSegments(boundsEdges);\n\t\tboundsLines.material.depthTest = false;\n\t\tboundsLines.material.opacity = 0.25;\n\t\tboundsLines.material.transparent = true;\n\t\tbounds.add(boundsFaces);\n\t\tbounds.add(boundsLines);\n\t\treturn bounds;\n\t}\n\n\tchangeBounds(newSize) {\n\t\t// const previousSize = this.bounds.geometry.parameters.height;\n\n\t\tthis.scene.remove(this.bounds);\n\t\tthis.bounds = this.createBounds();\n\t\tthis.scene.add(this.bounds);\n\n\t\tthis.camera.position.set(newSize, newSize, newSize * 1.25);\n\t}\n\n\tturn() {\n\t\tthis.current.add(dirs[this.dir]);\n\t\t// Snake goes outside boundaries\n\t\tif (Math.abs(this.current.getComponent(0)) >= this.props.boundsSize / 2 || Math.abs(this.current.getComponent(1)) >= this.props.boundsSize / 2 || Math.abs(this.current.getComponent(2)) >= this.props.boundsSize / 2) {\n\t\t\tconsole.log(this.current, this.props.boundsSize);\n\t\t\tconsole.log(\"Out of bounds\");\n\t\t\tthis.gameOver();\n\t\t}\n\t\telse if (this.grid[this.hashPosition(this.current)] === 'food') {\n\t\t\tthis.moveFoodRandom(this.food);\n\t\t\tthis.createSnakeBody(this.current.getComponent(0), this.current.getComponent(1), this.current.getComponent(2));\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse {\n\t\t\tthis.moveSnakeBody(this.snake[0], this.current.getComponent(0), this.current.getComponent(1), this.current.getComponent(2));\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t}\n\n\tgameOver() {\n\t\tthis.props.onGameOver();\n\t}\n\n\tstartAnimation() {\n\t\tconst animate = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.props.gameState === \"started\") {\n\t\t\t\t\tthis.animation = requestAnimationFrame(animate);\n\t\t\t\t\tthis.turn();\n\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t};\n\t\t\n\t\tthis.animation = requestAnimationFrame(animate);\n\t}\n\n\tstopAnimation() {\n\t\t// this.started = false;\n\t}\n\n\thandleKeyDown(e) {\n\t\tif (this.props.gameState !== \"started\") {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(\"pass\");\n\t\te.preventDefault();\n\t\tswitch(e.keyCode) {\n\t\t\tcase 37:\n\t\t\t\tthis.dir = \"-x\";\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tthis.dir = \"-z\";\n\t\t\t\tbreak;\n\t\t\tcase 39:\n\t\t\t\tthis.dir = \"+x\";\n\t\t\t\tbreak;\n\t\t\tcase 40:\n\t\t\t\tthis.dir = \"+z\";\n\t\t\t\tbreak;\n\t\t\tcase 88:\n\t\t\t\tthis.dir = \"-y\";\n\t\t\t\tbreak;\n\t\t\tcase 90:\n\t\t\t\tthis.dir = \"+y\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Game\" ref={ref => (this.mount = ref)} onKeyDown={this.handleKeyDown} />\n\t\t)\n\t}\n}\n\nexport default Game;","export default __webpack_public_path__ + \"static/media/controls.8c7292f0.svg\";","import React from \"react\";\nimport ControlsImage from \"./controls.svg\";\n\nclass BoundsSizeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        if (this.props.gameState === \"initial\") {\n            this.props.onBoundsSizeChange(e.target.value);\n        }\n    }\n\n    render() {\n        return (\n            <label>\n                Bounds Size:\n                <select value={this.props.value} onChange={this.handleChange}>\n                    <option value=\"7\">Small</option>\n                    <option value=\"15\">Medium</option>\n                    <option value=\"25\">Large</option>\n                </select>\n            </label>\n\n        );\n    }\n}\n\nclass StartButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onStartClick();\n    }\n\n    render() {\n        return (\n            <div className=\"start-button\">\n                <button onClick={this.handleClick}>Start</button>\n            </div>\n        )\n    }\n}\n\nclass StopButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onStopClick();\n    }\n\n    render() {\n        return (\n            <div className=\"start-button\">\n                <button onClick={this.handleClick}>Stop</button>\n            </div>\n        )\n    }\n}\n\nclass ResetButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onResetClick();\n    }\n\n    render() {\n        return (\n            <div className=\"reset-button\">\n                <button onClick={this.handleClick}>Reset</button>\n            </div>\n        )\n    }\n}\n\nclass Controls extends React.Component {\n    render() {\n        return (\n            <div className=\"Controls\">\n                <div>Controls</div>\n                <img src={ControlsImage} alt=\"Controls\" width=\"320px\" height=\"320px\"></img>\n            </div>\n        )\n    }\n}\n\nclass Settings extends React.Component {\n    render() {\n        return (\n            <>\n                <BoundsSizeInput value={this.props.boundsSize}\n                                 gameState={this.props.gameState} \n                                 onBoundsSizeChange={this.props.onBoundsSizeChange} />\n                <StartButton onStartClick={this.props.onStartClick} />\n                <StopButton onStopClick={this.props.onStopClick} />\n                <ResetButton onResetClick={this.props.onResetClick} />\n                <Controls />\n            </>\n        );\n    }\n}\n\nexport default Settings;\n","import './App.css';\nimport React from \"react\";\nimport Game from \"./Game.js\";\nimport Settings from \"./Settings.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {change: null,\n                  gameState: \"initial\",\n                  boundsSize: 7};\n\n    this.handleBoundsSizeChange = this.handleBoundsSizeChange.bind(this);\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleStopClick = this.handleStopClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleGameOver = this.handleGameOver.bind(this);\n  }\n\n  handleBoundsSizeChange(newSize) {\n    if (this.state.gameState === \"initial\") {\n      this.setState({change: \"bounds\", boundsSize: newSize});\n    }\n  }\n\n  handleStartClick() {\n    console.log(this.state.gameState);\n    if (this.state.gameState === \"initial\" || this.state.gameState === \"stopped\") {\n      this.setState({change: \"start\", gameState: \"started\"});\n    }\n  }\n\n  handleStopClick() {\n    if (this.state.gameState === \"started\") {\n      this.setState({change: \"stop\", gameState: \"stopped\"});\n    }\n  }\n\n  handleResetClick() {\n    this.setState({change: \"reset\", gameState: \"initial\"});\n  }\n\n  handleGameOver() {\n    this.setState({change: \"gameover\", gameState: \"gameover\"});\n  }\n\n  render() {\n      return (\n          <div className=\"App\">\n              <div className=\"App-Game\">\n                  <Game change={this.state.change} \n                        boundsSize={this.state.boundsSize} \n                        gameState={this.state.gameState}\n                        onGameOver={this.handleGameOver}/>\n              </div>\n              <div className=\"App-Settings\">\n                  <Settings gameState={this.state.gameState}\n                            boundsSize={this.state.boundsSize}\n                            onBoundsSizeChange={this.handleBoundsSizeChange}\n                            onStartClick={this.handleStartClick}\n                            onStopClick={this.handleStopClick}\n                            onResetClick={this.handleResetClick}\n                  />\n              </div>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
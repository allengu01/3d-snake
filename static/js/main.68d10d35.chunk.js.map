{"version":3,"sources":["Game.js","controls.svg","Settings.js","Scoreboard.js","App.js","reportWebVitals.js","index.js"],"names":["width","window","innerWidth","height","innerHeight","dirs","THREE","Game","props","initiate","bind","reset","changeScore","turn","hashPosition","getRandomBetween","moveFoodRandom","createFood","createSnakeBody","moveSnakeBody","createBounds","changeBounds","gameOver","startAnimation","stopAnimation","handleKeyDown","this","mount","appendChild","renderer","domElement","render","scene","camera","document","addEventListener","change","boundsSize","console","log","snake","removeEventListener","animation","undefined","antialias","alpha","setSize","setClearColor","boundsMaterial","color","transparent","opacity","bounds","add","snakeGeometry","snakeMaterial","foodGeometry","foodMaterial","light","position","set","lookAt","grid","current","dir","food","remove","length","pop","tmpFood","x","y","z","foodBox","foodEdges","geometry","foodLines","material","depthTest","getComponent","cantorPair","a","b","min","max","Math","floor","random","minBound","ceil","maxBound","empties","Vector3","push","snakeBody","snakeBox","snakeEdges","snakeLines","previousPosition","splice","indexOf","boundsGeometry","boundsFaces","boundsEdges","boundsLines","newSize","newScore","score","onScoreChange","abs","onGameOver","requestAnimationFrame","animate","setTimeout","gameState","e","preventDefault","keyCode","className","ref","onKeyDown","React","Component","BoundsSizeInput","handleChange","onBoundsSizeChange","target","value","onChange","StartButton","handleClick","onStartClick","onClick","StopButton","onStopClick","ResetButton","onResetClick","Controls","src","ControlsImage","alt","ToDoList","Settings","Scoreboard","App","state","handleBoundsSizeChange","handleScoreChange","handleStartClick","handleStopClick","handleResetClick","handleGameOver","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68d10d35.chunk.js","sourcesContent":["import React from \"react\";\nimport * as THREE from \"three\";\nimport { Vector3 } from \"three\";\nimport \"./Game.css\";\n\nconst width = window.innerWidth * 2 / 3, height = window.innerHeight;\nconst dirs = {\"+x\": new THREE.Vector3(1, 0, 0),\n\t\t\t  \"-x\": new THREE.Vector3(-1, 0, 0),\n\t\t  \t  \"+y\": new THREE.Vector3(0, 1, 0),\n\t\t\t  \"-y\": new THREE.Vector3(0, -1, 0),\n\t\t\t  \"+z\": new THREE.Vector3(0, 0, 1),\n\t\t\t  \"-z\": new THREE.Vector3(0, 0, -1)};\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.initiate.bind(this);\n\t\tthis.reset.bind(this);\n\t\tthis.changeScore.bind(this);\n\t\tthis.turn.bind(this);\n\t\tthis.hashPosition.bind(this);\n\t\tthis.getRandomBetween.bind(this);\n\t\tthis.moveFoodRandom.bind(this);\n\t\tthis.createFood.bind(this);\n\t\tthis.createSnakeBody.bind(this);\n\t\tthis.moveSnakeBody.bind(this);\n\t\tthis.createBounds.bind(this);\n\t\tthis.changeBounds.bind(this);\n\t\tthis.gameOver.bind(this);\n\t\tthis.startAnimation.bind(this);\n\t\tthis.stopAnimation.bind(this);\n\t\tthis.handleKeyDown.bind(this);\n\n\t\tthis.initiate();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mount.appendChild(this.renderer.domElement);\n\t\tthis.renderer.render(this.scene, this.camera);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\t}\n\t\n\tcomponentDidUpdate() {\n\t\tif (this.props.change === \"bounds\") {\n\t\t\tthis.changeBounds(this.props.boundsSize);\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse if (this.props.change === \"start\") {\n\t\t\tconsole.log(this.snake);\n\t\t\tthis.startAnimation();\n\t\t}\n\t\telse if (this.props.change === \"stop\") {\n\t\t\tthis.stopAnimation();\n\t\t}\n\t\telse if (this.props.change === \"reset\") {\n\t\t\tthis.reset();\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse if (this.props.change === \"gameover\") {\n\t\t\tthis.stopAnimation();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\t}\n\n\tinitiate() {\n\t\tthis.animation = undefined;\n\t\tthis.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.renderer = new THREE.WebGLRenderer({antialias: true, alpha: true});\n\t\tthis.renderer.setSize(width, height);\n\t\tthis.renderer.setClearColor(0x000000, 0);\n\t\t\n\t\tthis.boundsMaterial = new THREE.MeshLambertMaterial({color: 0xff0000, transparent: true, opacity: 0.15});\n\t\tthis.bounds = this.createBounds();\n\t\tthis.scene.add(this.bounds);\n\n\t\tthis.snake = [];\n\t\tthis.snakeGeometry = new THREE.BoxGeometry(1, 1, 1);\n\t\tthis.snakeMaterial = new THREE.MeshLambertMaterial({color: 0x00ff00});\n\n\t\tthis.foodGeometry = new THREE.BoxGeometry(1, 1, 1);\n\t\tthis.foodMaterial = new THREE.MeshLambertMaterial({color: 0xff0000});\n\n\t\tthis.light = new THREE.PointLight(0xFFFFFF, 1, 0);\n\t\tthis.light.position.set(30, 30, 30);\n\t\tthis.scene.add(this.light);\n\n\t\tthis.camera.position.set(this.props.boundsSize, this.props.boundsSize, this.props.boundsSize * 1.25);\n\t\tthis.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\t\tthis.reset();\n\t}\n\n\treset() {\n\t\tthis.changeScore(0);\n\t\tthis.grid = {};\n\t\tthis.current = new THREE.Vector3(0, 0, 0);\n\t\tthis.dir = \"+z\";\n\n\t\tif (this.food) {\n\t\t\tthis.scene.remove(this.food);\n\t\t}\n\t\twhile (this.snake.length > 0) {\n\t\t\tthis.scene.remove(this.snake.pop());\n\t\t}\n\n\t\tthis.createSnakeBody(0, 0, 0);\n\n\t\tvar tmpFood = this.createFood(0, 0, 0);\n\t\tthis.scene.add(tmpFood);\n\t\tthis.food = this.moveFoodRandom(tmpFood);\n\t}\n\n\tcreateFood(x, y, z) {\n\t\tvar food = new THREE.Group();\n\t\tconst foodBox = new THREE.Mesh(this.foodGeometry, this.foodMaterial);\n\t\tconst foodEdges = new THREE.EdgesGeometry(foodBox.geometry);\n\t\tconst foodLines = new THREE.LineSegments(foodEdges);\n\t\tfoodLines.material.depthTest = false;\n\t\tfoodLines.material.opacity = 0.25;\n\t\tfoodLines.material.transparent = true;\n\t\tfood.add(foodBox);\n\t\tfood.add(foodLines);\n\t\tfood.position.set(x, y, z);\n\t\treturn food;\n\t}\n\n\thashPosition(position) {\n\t\tvar x = position.getComponent(0), y = position.getComponent(1), z = position.getComponent(2);\n\t\tx = x >= 0 ? x * 2 : -x * 2 - 1;\n\t\ty = y >= 0 ? y * 2 : -y * 2 - 1;\n\t\tz = z >= 0 ? z * 2 : -z * 2 - 1;\n\t\tfunction cantorPair(a, b) {\n\t\t\treturn (a + b) * (a + b + 1) / 2 + b;\n\t\t}\n\t\treturn cantorPair(cantorPair(x, y), z);\n\t}\n\n\tgetRandomBetween(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min) + min);\n\t}\n\n\tmoveFoodRandom(food) {\n\t\tthis.grid[this.hashPosition(food.position)] = 'empty';\n\n\t\tconst minBound = Math.ceil(-this.props.boundsSize / 2), maxBound = Math.floor(this.props.boundsSize / 2);\n\t\tvar empties = [];\n\t\tfor (let x = minBound; x <= maxBound; x++) {\n\t\t\tfor (let y = minBound; y <= maxBound; y++) {\n\t\t\t\tfor (let z = minBound; z <= maxBound; z++) {\n\t\t\t\t\tconst position = new Vector3(x, y, z);\n\t\t\t\t\tif (this.grid[this.hashPosition(position)] !== 'snake' && this.grid[this.hashPosition(position)] !== 'food') {\n\t\t\t\t\t\tempties.push(position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst idx = this.getRandomBetween(0, empties.length);\n\t\tconst position = empties[idx];\n\t\tfood.position.set(position.getComponent(0), position.getComponent(1), position.getComponent(2));\n\t\tthis.grid[this.hashPosition(position)] = 'food';\n\t\treturn food;\n\t}\n\n\tcreateSnakeBody(x, y, z) {\n\t\tvar snakeBody = new THREE.Group();\n\t\tconst snakeBox = new THREE.Mesh(this.snakeGeometry, this.snakeMaterial);\n\t\tconst snakeEdges = new THREE.EdgesGeometry(snakeBox.geometry);\n\t\tconst snakeLines = new THREE.LineSegments(snakeEdges);\n\t\tsnakeLines.material.depthTest = false;\n\t\tsnakeLines.material.opacity = 0.25;\n\t\tsnakeLines.material.transparent = true;\n\t\tsnakeBody.add(snakeBox);\n\t\tsnakeBody.add(snakeLines);\n\t\tsnakeBody.position.set(x, y, z);\n\t\t\n\t\tthis.snake.push(snakeBody);\n\t\tthis.grid[this.hashPosition(snakeBody.position)] = 'snake';\n\t\tthis.scene.add(snakeBody);\n\t\treturn snakeBody;\n\t}\n\n\tmoveSnakeBody(snakeBody, x, y, z) {\n\t\tconst previousPosition = snakeBody.position;\n\t\tthis.grid[this.hashPosition(previousPosition)] = 'empty';\n\t\tif (this.grid[this.hashPosition(new Vector3(x, y, z))] === 'snake') {\n\t\t\tconsole.log(\"Hit itself\");\n\t\t\tthis.gameOver();\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tthis.snake.splice(this.snake.indexOf(snakeBody), 1);\n\t\t\tsnakeBody.position.set(x, y, z);\n\t\t\tthis.grid[this.hashPosition(snakeBody.position)] = 'snake';\n\t\t\tthis.snake.push(snakeBody);\n\t\t\treturn snakeBody;\n\t\t}\n\t}\n\n\tcreateBounds() {\n\t\tvar bounds = new THREE.Group();\n\t\tconst boundsGeometry = new THREE.BoxGeometry(this.props.boundsSize, this.props.boundsSize, this.props.boundsSize, this.props.boundsSize / 5, this.props.boundsSize / 5, this.props.boundsSize / 5);\n\t\tconst boundsFaces = new THREE.Mesh(boundsGeometry, this.boundsMaterial);\n\t\tconst boundsEdges = new THREE.EdgesGeometry(boundsFaces.geometry);\n\t\tconst boundsLines = new THREE.LineSegments(boundsEdges);\n\t\tboundsLines.material.depthTest = false;\n\t\tboundsLines.material.opacity = 0.25;\n\t\tboundsLines.material.transparent = true;\n\t\tbounds.add(boundsFaces);\n\t\tbounds.add(boundsLines);\n\t\treturn bounds;\n\t}\n\n\tchangeBounds(newSize) {\n\t\tthis.scene.remove(this.bounds);\n\t\tthis.bounds = this.createBounds();\n\t\tthis.scene.add(this.bounds);\n\n\t\tthis.camera.position.set(newSize, newSize, newSize * 1.25);\n\t}\n\n\tchangeScore(newScore) {\n\t\tthis.score = newScore;\n\t\tthis.props.onScoreChange(this.score);\n\t}\n\n\tturn() {\n\t\tthis.current.add(dirs[this.dir]);\n\t\t// Snake goes outside boundaries\n\t\tif (Math.abs(this.current.getComponent(0)) >= this.props.boundsSize / 2 || Math.abs(this.current.getComponent(1)) >= this.props.boundsSize / 2 || Math.abs(this.current.getComponent(2)) >= this.props.boundsSize / 2) {\n\t\t\tconsole.log(this.current, this.props.boundsSize);\n\t\t\tconsole.log(\"Out of bounds\");\n\t\t\tthis.gameOver();\n\t\t}\n\t\telse if (this.grid[this.hashPosition(this.current)] === 'food') {\n\t\t\tthis.changeScore(this.score + 1);\n\t\t\tthis.moveFoodRandom(this.food);\n\t\t\tthis.createSnakeBody(this.current.getComponent(0), this.current.getComponent(1), this.current.getComponent(2));\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse {\n\t\t\tthis.moveSnakeBody(this.snake[0], this.current.getComponent(0), this.current.getComponent(1), this.current.getComponent(2));\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t}\n\n\tgameOver() {\n\t\tthis.props.onGameOver();\n\t}\n\n\tstartAnimation() {\n\t\tconst animate = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.props.gameState === \"started\") {\n\t\t\t\t\tthis.animation = requestAnimationFrame(animate);\n\t\t\t\t\tthis.turn();\n\t\t\t\t}\n\t\t\t}, 1000 / 1.5);\n\t\t};\n\t\t\n\t\tthis.animation = requestAnimationFrame(animate);\n\t}\n\n\tstopAnimation() {\n\t\t// this.started = false;\n\t}\n\n\thandleKeyDown(e) {\n\t\tif (this.props.gameState !== \"started\") {\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(\"pass\");\n\t\te.preventDefault();\n\t\tswitch(e.keyCode) {\n\t\t\tcase 37:\n\t\t\t\tthis.dir = \"-x\";\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tthis.dir = \"-z\";\n\t\t\t\tbreak;\n\t\t\tcase 39:\n\t\t\t\tthis.dir = \"+x\";\n\t\t\t\tbreak;\n\t\t\tcase 40:\n\t\t\t\tthis.dir = \"+z\";\n\t\t\t\tbreak;\n\t\t\tcase 88:\n\t\t\t\tthis.dir = \"-y\";\n\t\t\t\tbreak;\n\t\t\tcase 90:\n\t\t\t\tthis.dir = \"+y\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Game\">\n\t\t\t\t<div className=\"Gameboard\" ref={ref => (this.mount = ref)} onKeyDown={this.handleKeyDown} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Game;","export default __webpack_public_path__ + \"static/media/controls.acff3c6d.svg\";","import React from \"react\";\nimport \"./Settings.css\";\nimport ControlsImage from \"./controls.svg\";\n\nclass BoundsSizeInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        if (this.props.gameState === \"initial\") {\n            this.props.onBoundsSizeChange(e.target.value);\n        }\n    }\n\n    render() {\n        return (\n            <label className=\"bounds-size-label\">\n                Bounds Size: \n                <select className=\"bounds-size-select\" value={this.props.value} onChange={this.handleChange}>\n                    <option value=\"7\">Small</option>\n                    <option value=\"15\">Medium</option>\n                    <option value=\"25\">Large</option>\n                </select>\n            </label>\n\n        );\n    }\n}\n\nclass StartButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onStartClick();\n    }\n\n    render() {\n        return (\n            <a className=\"start-button\">\n                <button onClick={this.handleClick}>Start</button>\n            </a>\n        )   \n    }\n}\n\nclass StopButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onStopClick();\n    }\n\n    render() {\n        return (\n            <a className=\"start-button\">\n                <button onClick={this.handleClick}>Stop</button>\n            </a>\n        )\n    }\n}\n\nclass ResetButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onResetClick();\n    }\n\n    render() {\n        return (\n            <a className=\"reset-button\">\n                <button onClick={this.handleClick}>Reset</button>\n            </a>\n        )\n    }\n}\n\nclass Controls extends React.Component {\n    render() {\n        return (\n            <div className=\"Controls\">\n                <div>Controls</div>\n                <img src={ControlsImage} alt=\"Controls\" width=\"200px\" height=\"200px\"></img>\n            </div>\n        )\n    }\n}\n\nclass ToDoList extends React.Component {\n    render() {\n        return (\n            <div className=\"ToDo\">\n                To Do:\n                <ul>\n                    <li>Better 3D depth or grid?</li>\n                    <li>First person mode</li>\n                    <li>Leaderboard</li>\n                    <li>Pathfinding AI</li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nclass Settings extends React.Component {\n    render() {\n        return (\n            <div className=\"Settings\">\n                <BoundsSizeInput value={this.props.boundsSize}\n                                 gameState={this.props.gameState} \n                                 onBoundsSizeChange={this.props.onBoundsSizeChange} />\n                <div className=\"SettingsButtons\">\n                    <StartButton onStartClick={this.props.onStartClick} />\n                    <StopButton onStopClick={this.props.onStopClick} />\n                    <ResetButton onResetClick={this.props.onResetClick} />\n                </div>\n\n                <Controls />\n                <ToDoList />\n            </div>\n        );\n    }\n}\n\nexport default Settings;\n","import React from \"react\";\nimport \"./Scoreboard.css\";\n\nclass Scoreboard extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Scoreboard\">Score: {this.props.score}</div>\n\t\n\t\t)\n\t} \n}\n\nexport default Scoreboard;","import './App.css';\nimport React from \"react\";\nimport Game from \"./Game.js\";\nimport Settings from \"./Settings.js\";\nimport Scoreboard from \"./Scoreboard.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {change: null,\n                  gameState: \"initial\",\n                  boundsSize: 7,\n                  score: 0};\n\n    this.handleBoundsSizeChange = this.handleBoundsSizeChange.bind(this);\n    this.handleScoreChange = this.handleScoreChange.bind(this);\n    this.handleStartClick = this.handleStartClick.bind(this);\n    this.handleStopClick = this.handleStopClick.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.handleGameOver = this.handleGameOver.bind(this);\n  }\n\n  handleBoundsSizeChange(newSize) {\n    if (this.state.gameState === \"initial\") {\n      this.setState({change: \"bounds\", boundsSize: newSize});\n    }\n  }\n\n  handleStartClick() {\n    console.log(this.state.gameState);\n    if (this.state.gameState === \"initial\" || this.state.gameState === \"stopped\") {\n      this.setState({change: \"start\", gameState: \"started\"});\n    }\n  }\n\n  handleStopClick() {\n    if (this.state.gameState === \"started\") {\n      this.setState({change: \"stop\", gameState: \"stopped\"});\n    }\n  }\n\n  handleResetClick() {\n    this.setState({change: \"reset\", gameState: \"initial\"});\n  }\n\n  handleScoreChange(newScore) {\n    this.setState({change: \"score\", score: newScore});\n  }\n\n  handleGameOver() {\n    this.setState({change: \"gameover\", gameState: \"gameover\"});\n  }\n\n  render() {\n      return (\n          <div className=\"App\">\n              <div className=\"App-Game\">\n                  <Game change={this.state.change} \n                        boundsSize={this.state.boundsSize} \n                        gameState={this.state.gameState}\n                        onScoreChange={this.handleScoreChange}\n                        onGameOver={this.handleGameOver}/>\n              </div>\n              <div className=\"App-Settings\">\n                  <Settings gameState={this.state.gameState}\n                            boundsSize={this.state.boundsSize}\n                            onBoundsSizeChange={this.handleBoundsSizeChange}\n                            onStartClick={this.handleStartClick}\n                            onStopClick={this.handleStopClick}\n                            onResetClick={this.handleResetClick}\n                  />\n              </div>\n              <div className=\"App-Scoreboard\">\n                  <Scoreboard score={this.state.score} />\n              </div>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
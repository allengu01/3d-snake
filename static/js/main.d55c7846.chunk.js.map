{"version":3,"sources":["PathAI.js","Game.js","controls.svg","Settings.js","Scoreboard.js","Message.js","App.js","reportWebVitals.js","index.js"],"names":["PositionPath","position","path","this","PathAI","hashPosition","x","getComponent","y","z","cantorPair","a","b","nextMove","grid","boundsSize","currentHeadPosition","foodPosition","getNextPosition","currentPosition","direction","deltaPosition","directions","newPosition","clone","add","validatePosition","visited","has","Math","abs","start","target","Set","queue","length","console","log","currentPositionPath","shift","currentPath","Object","keys","nextPosition","newPath","push","bfs","THREE","width","window","innerWidth","height","innerHeight","dirs","Game","props","initiate","bind","reset","changeScore","turn","getRandomBetween","moveFoodRandomly","createFood","createSnakeBody","moveSnakeBody","createBounds","changeBounds","gameOver","startAnimation","stopAnimation","handleKeyDown","mount","appendChild","renderer","domElement","render","scene","camera","document","addEventListener","change","player","createPathfindingAI","removeEventListener","animation","undefined","antialias","alpha","setSize","setClearColor","boundsMaterial","color","transparent","opacity","bounds","snake","snakeGeometry","snakeMaterial","foodGeometry","foodMaterial","light","set","lookAt","snakeHeadPosition","dir","food","remove","pop","tmpFood","foodBox","foodEdges","geometry","foodLines","material","depthTest","min","max","floor","random","minBound","ceil","maxBound","empties","Vector3","snakeBody","snakeBox","snakeEdges","snakeLines","previousPosition","splice","indexOf","boundsGeometry","boundsFaces","boundsEdges","boundsLines","newSize","newScore","score","onScoreChange","ai","aiInput","cause","onGameOver","requestAnimationFrame","animate","setTimeout","gameState","speed","e","preventDefault","keyCode","onSpaceBar","className","ref","onKeyDown","React","Component","Instructions","BoundsSizeInput","handleChange","onBoundsSizeChange","value","onChange","SpeedInput","onSpeedChange","PlayerInput","onPlayerChange","StartButton","handleClick","onStartClick","onClick","StopButton","onStopClick","ResetButton","onResetClick","Controls","src","ControlsImage","alt","ToDoList","Settings","Scoreboard","Message","id","message","App","handleBoundsSizeChange","state","setState","handleSpeedChange","newSpeed","handlePlayerChange","newPlayer","handleStartClick","handleStopClick","handleSpaceBar","handleResetClick","handleScoreChange","handleGameOver","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d55c7846.chunk.js","sourcesContent":["import * as THREE from \"three\";\n\nclass PathAI { \n    constructor() {\n        this.directions = {\"+x\": new THREE.Vector3(1, 0, 0),\n                            \"-x\": new THREE.Vector3(-1, 0, 0),\n                            \"+y\": new THREE.Vector3(0, 1, 0),\n                            \"-y\": new THREE.Vector3(0, -1, 0),\n                            \"+z\": new THREE.Vector3(0, 0, 1),\n                            \"-z\": new THREE.Vector3(0, 0, -1)};\n    }\n\n    hashPosition = (position) => {\n\t\tvar x = position.getComponent(0), y = position.getComponent(1), z = position.getComponent(2);\n\t\tx = x >= 0 ? x * 2 : -x * 2 - 1;\n\t\ty = y >= 0 ? y * 2 : -y * 2 - 1;\n\t\tz = z >= 0 ? z * 2 : -z * 2 - 1;\n\t\t\n\t\tfunction cantorPair(a, b) {\n\t\t\treturn (a + b) * (a + b + 1) / 2 + b;\n\t\t}\n\t\treturn cantorPair(cantorPair(x, y), z);\n\t}\n\n    nextMove = (grid, boundsSize, currentHeadPosition, foodPosition) => { \n        const getNextPosition = (currentPosition, direction) => {\n            const deltaPosition = this.directions[direction];\n            const newPosition = currentPosition.clone();\n            newPosition.add(deltaPosition);\n            return newPosition;\n        }\n    \n        const validatePosition = (position, visited) => {\n            return !visited.has(this.hashPosition(position)) && grid[this.hashPosition(position)] !== \"snake\" && Math.abs(position.getComponent(0)) <= boundsSize / 2 && Math.abs(position.getComponent(1)) <= boundsSize / 2 && Math.abs(position.getComponent(2)) <= boundsSize / 2;\n        }\n        \n        const bfs = (start, target) => {\n            var visited = new Set();\n            var queue = [new PositionPath(start.clone(), [])];\n\n            while (queue.length) {\n                console.log(queue.length);\n                const currentPositionPath = queue.shift();\n                const currentPosition = currentPositionPath.position;\n                const currentPath = currentPositionPath.path;\n                \n                if (visited.has(this.hashPosition(currentPosition.clone()))) {\n                    continue;\n                }\n                \n                visited.add(this.hashPosition(currentPosition.clone()));\n                \n                if (this.hashPosition(currentPosition) === this.hashPosition(target)) {\n                    return currentPath\n                }\n                for (const direction of Object.keys(this.directions)) {\n                    const nextPosition = getNextPosition(currentPosition, direction);\n                    if (validatePosition(nextPosition, visited)) {\n                        var newPath = [...currentPath];\n                        newPath.push(direction);\n                        queue.push(new PositionPath(nextPosition, newPath));\n                    }\n                }\n            }\n            return [];\n        }\n\n        // const currentHeadPosition = [currentHeadVector.getComponent(0), currentHeadVector.getComponent(1), currentHeadVector.getComponent(2)];\n        // const foodPosition = [foodVector.getComponent(0), foodVector.getComponent(1), foodVector.getComponent(2)];\n        const path = bfs(currentHeadPosition, foodPosition);\n        if (path) {\n            return path[0];\n        }\n        else {\n            // Choose random viable direction if possible. If no viable direction, move forward (game over).\n            for (const direction of Object.keys(this.directions)) {\n                const nextPosition = getNextPosition(currentHeadPosition, direction);\n                if (validatePosition(nextPosition, new Set())) {\n                    return [direction];\n                }\n            }\n            return [];\n        }\n    }\n}\n\nclass PositionPath {\n    constructor(position, path) {\n        this.position = position;\n        this.path = path;\n    }\n}\n\nexport default PathAI;","import React from \"react\";\nimport * as THREE from \"three\";\nimport { Vector3 } from \"three\";\nimport \"./Game.css\";\nimport PathAI from \"./PathAI.js\";\n\nconst width = window.innerWidth * 2 / 3, height = window.innerHeight;\nconst dirs = {\"+x\": new THREE.Vector3(1, 0, 0),\n\t\t\t  \"-x\": new THREE.Vector3(-1, 0, 0),\n\t\t  \t  \"+y\": new THREE.Vector3(0, 1, 0),\n\t\t\t  \"-y\": new THREE.Vector3(0, -1, 0),\n\t\t\t  \"+z\": new THREE.Vector3(0, 0, 1),\n\t\t\t  \"-z\": new THREE.Vector3(0, 0, -1)};\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.initiate.bind(this);\n\t\tthis.reset.bind(this);\n\t\tthis.changeScore.bind(this);\n\t\tthis.turn.bind(this);\n\t\tthis.hashPosition.bind(this);\n\t\tthis.getRandomBetween.bind(this);\n\t\tthis.moveFoodRandomly.bind(this);\n\t\tthis.createFood.bind(this);\n\t\tthis.createSnakeBody.bind(this);\n\t\tthis.moveSnakeBody.bind(this);\n\t\tthis.createBounds.bind(this);\n\t\tthis.changeBounds.bind(this);\n\t\tthis.gameOver.bind(this);\n\t\tthis.startAnimation.bind(this);\n\t\tthis.stopAnimation.bind(this);\n\t\tthis.handleKeyDown.bind(this);\n\n\t\tthis.initiate();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mount.appendChild(this.renderer.domElement);\n\t\tthis.renderer.render(this.scene, this.camera);\n\t\tdocument.addEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\t}\n\t\n\tcomponentDidUpdate() {\n\t\tif (this.props.change === \"bounds\") {\n\t\t\tthis.changeBounds(this.props.boundsSize);\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse if (this.props.change === \"player\") {\n\t\t\tif (this.props.player === \"pathfinding\") {\n\t\t\t\tthis.createPathfindingAI();\n\t\t\t}\n\t\t}\n\t\telse if (this.props.change === \"start\") {\n\t\t\tthis.startAnimation();\n\t\t}\n\t\telse if (this.props.change === \"stop\") {\n\t\t\tthis.stopAnimation();\n\t\t}\n\t\telse if (this.props.change === \"reset\") {\n\t\t\tthis.reset();\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\telse if (this.props.change === \"gameover\") {\n\t\t\tthis.stopAnimation();\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tdocument.removeEventListener(\"keydown\", this.handleKeyDown.bind(this));\n\t}\n\n\tinitiate() {\n\t\tthis.animation = undefined;\n\t\tthis.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n\t\tthis.scene = new THREE.Scene();\n\t\tthis.renderer = new THREE.WebGLRenderer({antialias: true, alpha: true});\n\t\tthis.renderer.setSize(width, height);\n\t\tthis.renderer.setClearColor(0x000000, 0);\n\t\t\n\t\tthis.boundsMaterial = new THREE.MeshLambertMaterial({color: 0xff0000, transparent: true, opacity: 0.15});\n\t\tthis.bounds = this.createBounds();\n\t\tthis.scene.add(this.bounds);\n\n\t\tthis.snake = [];\n\t\tthis.snakeGeometry = new THREE.BoxGeometry(1, 1, 1);\n\t\tthis.snakeMaterial = new THREE.MeshLambertMaterial({color: 0x00ff00});\n\n\t\tthis.foodGeometry = new THREE.BoxGeometry(1, 1, 1);\n\t\tthis.foodMaterial = new THREE.MeshLambertMaterial({color: 0xff0000});\n\n\t\tthis.light = new THREE.PointLight(0xFFFFFF, 1, 0);\n\t\tthis.light.position.set(30, 30, 30);\n\t\tthis.scene.add(this.light);\n\n\t\tthis.camera.position.set(this.props.boundsSize * 0.8, this.props.boundsSize * 0.8, this.props.boundsSize);\n\t\tthis.camera.lookAt(new THREE.Vector3(0, 0, 0));\n\n\t\tthis.reset();\n\t}\n\n\treset() {\n\t\tthis.changeScore(0);\n\t\tthis.grid = {};\n\t\tthis.snakeHeadPosition = new THREE.Vector3(0, 0, 0);\n\t\tthis.dir = \"+z\";\n\n\t\tif (this.food) {\n\t\t\tthis.scene.remove(this.food);\n\t\t}\n\t\twhile (this.snake.length > 0) {\n\t\t\tthis.scene.remove(this.snake.pop());\n\t\t}\n\n\t\tthis.createSnakeBody(0, 0, 0);\n\n\t\tvar tmpFood = this.createFood(0, 0, 0);\n\t\tthis.scene.add(tmpFood);\n\t\tthis.food = this.moveFoodRandomly(tmpFood);\n\t}\n\n\tcreateFood(x, y, z) {\n\t\tvar food = new THREE.Group();\n\t\tconst foodBox = new THREE.Mesh(this.foodGeometry, this.foodMaterial);\n\t\tconst foodEdges = new THREE.EdgesGeometry(foodBox.geometry);\n\t\tconst foodLines = new THREE.LineSegments(foodEdges);\n\t\tfoodLines.material.depthTest = false;\n\t\tfoodLines.material.opacity = 0.25;\n\t\tfoodLines.material.transparent = true;\n\t\tfood.add(foodBox);\n\t\tfood.add(foodLines);\n\t\tfood.position.set(x, y, z);\n\t\treturn food;\n\t}\n\n\thashPosition(position) {\n\t\tvar x = position.getComponent(0), y = position.getComponent(1), z = position.getComponent(2);\n\t\tx = x >= 0 ? x * 2 : -x * 2 - 1;\n\t\ty = y >= 0 ? y * 2 : -y * 2 - 1;\n\t\tz = z >= 0 ? z * 2 : -z * 2 - 1;\n\t\t\n\t\tfunction cantorPair(a, b) {\n\t\t\treturn (a + b) * (a + b + 1) / 2 + b;\n\t\t}\n\t\treturn cantorPair(cantorPair(x, y), z);\n\t}\n\n\tgetRandomBetween(min, max) {\n\t\treturn Math.floor(Math.random() * (max - min) + min);\n\t}\n\n\tmoveFoodRandomly(food) {\n\t\tthis.grid[this.hashPosition(food.position)] = 'empty';\n\n\t\tconst minBound = Math.ceil(-this.props.boundsSize / 2), maxBound = Math.floor(this.props.boundsSize / 2);\n\t\tvar empties = [];\n\t\tfor (let x = minBound; x <= maxBound; x++) {\n\t\t\tfor (let y = minBound; y <= maxBound; y++) {\n\t\t\t\tfor (let z = minBound; z <= maxBound; z++) {\n\t\t\t\t\tconst position = new Vector3(x, y, z);\n\t\t\t\t\tif (this.grid[this.hashPosition(position)] !== 'snake' && this.grid[this.hashPosition(position)] !== 'food') {\n\t\t\t\t\t\tempties.push(position);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst idx = this.getRandomBetween(0, empties.length);\n\t\tconst position = empties[idx];\n\t\tfood.position.set(position.getComponent(0), position.getComponent(1), position.getComponent(2));\n\t\tthis.grid[this.hashPosition(position)] = 'food';\n\t\treturn food;\n\t}\n\n\tcreateSnakeBody(x, y, z) {\n\t\tvar snakeBody = new THREE.Group();\n\t\tconst snakeBox = new THREE.Mesh(this.snakeGeometry, this.snakeMaterial);\n\t\tconst snakeEdges = new THREE.EdgesGeometry(snakeBox.geometry);\n\t\tconst snakeLines = new THREE.LineSegments(snakeEdges);\n\t\tsnakeLines.material.depthTest = false;\n\t\tsnakeLines.material.opacity = 0.25;\n\t\tsnakeLines.material.transparent = true;\n\t\tsnakeBody.add(snakeBox);\n\t\tsnakeBody.add(snakeLines);\n\t\tsnakeBody.position.set(x, y, z);\n\t\t\n\t\tthis.snake.push(snakeBody);\n\t\tthis.grid[this.hashPosition(snakeBody.position)] = 'snake';\n\t\tthis.scene.add(snakeBody);\n\t\treturn snakeBody;\n\t}\n\n\tmoveSnakeBody(snakeBody, x, y, z) {\n\t\tconst previousPosition = snakeBody.position;\n\t\tthis.grid[this.hashPosition(previousPosition)] = 'empty';\n\n\t\t// Snake hits itself, then game over\n\t\tif (this.grid[this.hashPosition(new Vector3(x, y, z))] === 'snake') {\n\t\t\tthis.gameOver(\"Hit itself\");\n\t\t\treturn;\n\t\t}\n\t\t// Snake goes outside boundaries, then also game over\n\t\telse if (Math.abs(x) >= this.props.boundsSize / 2 || Math.abs(y) >= this.props.boundsSize / 2 || Math.abs(z) >= this.props.boundsSize / 2) {\n\t\t\tthis.gameOver(\"Out of bounds\");\n\t\t}\n\t\telse {\n\t\t\tthis.snake.splice(this.snake.indexOf(snakeBody), 1);\n\t\t\tsnakeBody.position.set(x, y, z);\n\t\t\tthis.grid[this.hashPosition(snakeBody.position)] = 'snake';\n\t\t\tthis.snake.push(snakeBody);\n\t\t\treturn snakeBody;\n\t\t}\n\t}\n\n\tcreateBounds() {\n\t\tvar bounds = new THREE.Group();\n\t\tconst boundsGeometry = new THREE.BoxGeometry(this.props.boundsSize, this.props.boundsSize, this.props.boundsSize, this.props.boundsSize / 5, this.props.boundsSize / 5, this.props.boundsSize / 5);\n\t\tconst boundsFaces = new THREE.Mesh(boundsGeometry, this.boundsMaterial);\n\t\tconst boundsEdges = new THREE.EdgesGeometry(boundsFaces.geometry);\n\t\tconst boundsLines = new THREE.LineSegments(boundsEdges);\n\t\tboundsLines.material.depthTest = false;\n\t\tboundsLines.material.opacity = 0.25;\n\t\tboundsLines.material.transparent = true;\n\t\tbounds.add(boundsFaces);\n\t\tbounds.add(boundsLines);\n\t\treturn bounds;\n\t}\n\n\tchangeBounds(newSize) {\n\t\tthis.scene.remove(this.bounds);\n\t\tthis.bounds = this.createBounds();\n\t\tthis.scene.add(this.bounds);\n\t\tthis.reset();\n\t\tthis.camera.position.set(newSize * 0.8, newSize * 0.8, newSize);\n\t}\n\n\tchangeScore(newScore) {\n\t\tthis.score = newScore;\n\t\tthis.props.onScoreChange(this.score);\n\t}\n\n\tturn() {\n\t\tthis.snakeHeadPosition.add(dirs[this.dir]);\n\n\t\t// Snake eats food\n\t\tif (this.grid[this.hashPosition(this.snakeHeadPosition)] === 'food') {\n\t\t\tthis.changeScore(this.score + 1);\n\t\t\tthis.moveFoodRandomly(this.food);\n\t\t\tthis.createSnakeBody(this.snakeHeadPosition.getComponent(0), this.snakeHeadPosition.getComponent(1), this.snakeHeadPosition.getComponent(2));\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\t\t// Snake moves\n\t\telse {\n\t\t\tthis.moveSnakeBody(this.snake[0], this.snakeHeadPosition.getComponent(0), this.snakeHeadPosition.getComponent(1), this.snakeHeadPosition.getComponent(2));\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\t\t}\n\n\t\t// If AI is playing the game, have AI input the next move\n\t\tif (this.props.player === \"pathfinding\") {\n\t\t\tif (this.ai && this.ai instanceof PathAI) {\n\t\t\t\tvar aiInput = this.ai.nextMove(this.grid, this.props.boundsSize, this.snakeHeadPosition, this.food.position);\n\t\t\t\tif (aiInput) {\n\t\t\t\t\tthis.dir = aiInput;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"AI Object does not exist or is not an instance of PathAI\");\n\t\t\t}\n\t\t}\n\t}\n\n\tgameOver(cause) {\n\t\tthis.props.onGameOver(cause);\n\t}\n\n\tstartAnimation() {\n\t\tconst animate = () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (this.props.gameState === \"started\") {\n\t\t\t\t\tthis.animation = requestAnimationFrame(animate);\n\t\t\t\t\tthis.turn();\n\t\t\t\t}\n\t\t\t}, 1000 / this.props.speed);\n\t\t};\n\t\t\n\t\tthis.animation = requestAnimationFrame(animate);\n\t}\n\n\tstopAnimation() {\n\t\t// this.started = false;\n\t}\n\n\thandleKeyDown(e) {\n\t\te.preventDefault();\n\t\tif (e.keyCode === 32) {\n\t\t\tthis.props.onSpaceBar();\n\t\t}\n\t\telse if (this.props.gameState !== \"started\" || this.props.player !== \"you\") {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tconsole.log(\"pass\");\n\t\t\tswitch(e.keyCode) {\n\t\t\t\tcase 37:\n\t\t\t\t\tthis.dir = \"-x\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 38:\n\t\t\t\t\tthis.dir = \"-z\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 39:\n\t\t\t\t\tthis.dir = \"+x\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 40:\n\t\t\t\t\tthis.dir = \"+z\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 88:\n\t\t\t\t\tthis.dir = \"-y\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 90:\n\t\t\t\t\tthis.dir = \"+y\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tcreatePathfindingAI() {\n\t\tthis.ai = new PathAI();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Game\">\n\t\t\t\t<div className=\"Gameboard\" ref={ref => (this.mount = ref)} onKeyDown={this.handleKeyDown} />\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Game;","export default __webpack_public_path__ + \"static/media/controls.acff3c6d.svg\";","import React from \"react\";\nimport \"./Settings.css\";\nimport ControlsImage from \"./controls.svg\";\n\nclass Instructions extends React.Component {\n    render() {\n        return (\n            <div className=\"Instructions\">\n                <div className=\"Instructions-Header\">Instructions</div>\n                <ol>\n                    <li>Choose the size.</li>\n                    <li>Click \"Start\" or use the space bar to begin playing.</li>\n                    <li>Check out my Pathfinding AI play the game (under \"Player\"). Keep the size to \"Small\".</li>\n                    <li>Have fun :)</li>\n                </ol>\n            </div>\n        )\n    }\n}\n\nclass BoundsSizeInput extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleChange = (e) => {\n        this.props.onBoundsSizeChange(e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <label className=\"bounds-size-label\">\n                    Size: \n                    <select className=\"bounds-size-select\" value={this.props.value} onChange={this.handleChange}>\n                        <option value=\"7\">Small</option>\n                        <option value=\"15\">Medium</option>\n                        <option value=\"25\">Large</option>\n                    </select>\n                </label>\n            </div>\n        );\n    }\n}\n\nclass SpeedInput extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleChange = (e) => {\n        this.props.onSpeedChange(e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <label className=\"speed-label\">\n                    Speed: \n                    <select className=\"speed-select\" value={this.props.value} onChange={this.handleChange}>\n                        <option value=\"1.5\">Slow</option>\n                        <option value=\"3\">Medium</option>\n                        <option value=\"6\">Fast</option>\n                    </select>\n                </label>\n            </div>\n        );\n    }\n}\n\nclass PlayerInput extends React.Component {\n    handleChange = (e) => {\n        this.props.onPlayerChange(e.target.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <label className=\"player-label\">\n                    Player: \n                    <select className=\"player-select\" value={this.props.value} onChange={this.handleChange}>\n                        <option value=\"you\">You</option>\n                        <option value=\"pathfinding\">Pathfinding AI</option>\n                    </select>\n                </label>\n            </div>\n        )\n    }\n}\n\nclass StartButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onStartClick();\n    }\n\n    render() {\n        return (\n            <a className=\"start-button\">\n                <button onClick={this.handleClick}>Start</button>\n            </a>\n        )   \n    }\n}\n\nclass StopButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onStopClick();\n    }\n\n    render() {\n        return (\n            <a className=\"start-button\">\n                <button onClick={this.handleClick}>Stop</button>\n            </a>\n        )\n    }\n}\n\nclass ResetButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e) {\n        this.props.onResetClick();\n    }\n\n    render() {\n        return (\n            <a className=\"reset-button\">\n                <button onClick={this.handleClick}>Reset</button>\n            </a>\n        )\n    }\n}\n\nclass Controls extends React.Component {\n    render() {\n        return (\n            <div className=\"Controls\">\n                <div>Controls</div>\n                <img src={ControlsImage} alt=\"Controls\" width=\"200px\" height=\"200px\"></img>\n            </div>\n        )\n    }\n}\n\nclass ToDoList extends React.Component {\n    render() {\n        return (\n            <div className=\"ToDo\">\n                To Do:\n                <ul>\n                    <li>Better 3D depth or grid?</li>\n                    <li>Leaderboard</li>\n                </ul>\n            </div>\n        )\n    }\n}\n\nclass Settings extends React.Component {\n    render() {\n        return (\n            <div className=\"Settings\">\n                <Instructions />\n                <BoundsSizeInput value={this.props.boundsSize}\n                                 onBoundsSizeChange={this.props.onBoundsSizeChange} />\n                <SpeedInput value={this.props.speed}\n                            onSpeedChange={this.props.onSpeedChange} />\n                <PlayerInput value={this.props.player}\n                             onPlayerChange={this.props.onPlayerChange} />\n                <div className=\"SettingsButtons\">\n                    <StartButton onStartClick={this.props.onStartClick} />\n                    <StopButton onStopClick={this.props.onStopClick} />\n                    <ResetButton onResetClick={this.props.onResetClick} />\n                </div>\n                <Controls />\n                <ToDoList />\n            </div>\n        );\n    }\n}\n\nexport default Settings;\n","import React from \"react\";\nimport \"./Scoreboard.css\";\n\nclass Scoreboard extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Scoreboard\">Score: {this.props.score}</div>\n\t\n\t\t)\n\t} \n}\n\nexport default Scoreboard;","import React from \"react\";\nimport \"./Message.css\";\n\nclass Message extends React.Component {\n    render() {\n        return (\n            <div className=\"Message-Container\">\n                <div className=\"Message\" id={this.props.gameState}>{this.props.message}</div>\n            </div>\n        )\n    }\n}\n\nexport default Message;","import './App.css';\nimport React from \"react\";\nimport Game from \"./Game.js\";\nimport Settings from \"./Settings.js\";\nimport Scoreboard from \"./Scoreboard.js\";\nimport Message from \"./Message.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {change: null,\n                  gameState: \"initial\",\n                  message: \"Press space to start\",\n                  boundsSize: 7,\n                  speed: 3,\n                  score: 0,\n                  player: \"you\"};\n  }\n\n  handleBoundsSizeChange = (newSize) => {\n    if (this.state.gameState === \"initial\") {\n      this.setState({change: \"bounds\", boundsSize: newSize});\n    }\n  }\n\n  handleSpeedChange = (newSpeed) => {\n    if (this.state.gameState === \"initial\") {\n      this.setState({change: \"speed\", speed: newSpeed});\n    }\n  }\n\n  handlePlayerChange = (newPlayer) => {\n    if (this.state.gameState === \"initial\") {\n      this.setState({change: \"player\", player: newPlayer});\n    }\n  }\n\n  handleStartClick = () => {\n    console.log(this.state.gameState);\n    if (this.state.gameState === \"initial\" || this.state.gameState === \"stopped\") {\n      this.setState({change: \"start\", gameState: \"started\", message: \"\"});\n    }\n  }\n\n  handleStopClick = () => {\n    if (this.state.gameState === \"started\") {\n      this.setState({change: \"stop\", gameState: \"stopped\", message: \"Paused: Press space to start\"});\n    }\n  }\n\n  handleSpaceBar = () => {\n    if (this.state.gameState === \"initial\" || this.state.gameState === \"stopped\") {\n      this.setState({change: \"start\", gameState: \"started\", message: \"\"});\n    }\n    else if (this.state.gameState === \"started\") {\n      this.setState({change: \"stop\", gameState: \"stopped\", message: \"Paused: Press space to start\"});\n    }\n    else if (this.state.gameState === \"gameover\") {\n      this.setState({change: \"reset\", gameState: \"initial\", message: \"Press space to start\"});\n    }\n  }\n\n  handleResetClick = () => {\n    this.setState({change: \"reset\", gameState: \"initial\", message: \"Press space to start\"});\n  }\n\n  handleScoreChange = (newScore) => {\n    this.setState({change: \"score\", score: newScore});\n  }\n\n  handleGameOver = (cause) => {\n    this.setState({change: \"gameover\", gameState: \"gameover\", message: `Game Over: ${cause}`});\n  }\n\n  render() {\n      return (\n          <div className=\"App\">\n              <div className=\"App-Game\">\n                  <Game change={this.state.change} \n                        boundsSize={this.state.boundsSize}\n                        speed={this.state.speed} \n                        gameState={this.state.gameState}\n                        player={this.state.player}\n                        onSpaceBar={this.handleSpaceBar}\n                        onScoreChange={this.handleScoreChange}\n                        onGameOver={this.handleGameOver}/>\n              </div>\n              <div className=\"App-Settings\">\n                  <Settings gameState={this.state.gameState}\n                            boundsSize={this.state.boundsSize}\n                            speed={this.state.speed}\n                            player={this.state.player}\n                            onBoundsSizeChange={this.handleBoundsSizeChange}\n                            onSpeedChange={this.handleSpeedChange}\n                            onPlayerChange={this.handlePlayerChange}\n                            onStartClick={this.handleStartClick}\n                            onStopClick={this.handleStopClick}\n                            onResetClick={this.handleResetClick}\n                  />\n              </div>\n              <div className=\"App-Scoreboard\">\n                  <Scoreboard score={this.state.score} />\n              </div>\n              <div className=\"App-Message\">\n                  <Message gameState={this.state.gameState} message={this.state.message} />\n              </div>\n          </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}